import storybook from 'eslint-plugin-storybook';
import js from '@eslint/js';
import typescript from '@typescript-eslint/eslint-plugin';
import tsParser from '@typescript-eslint/parser';
import importPlugin from 'eslint-plugin-import';
import sortKeysFix from 'eslint-plugin-sort-keys-fix';
import sortDestructureKeys from 'eslint-plugin-sort-destructure-keys';
import prettier from 'eslint-config-prettier';
import prettierPlugin from 'eslint-plugin-prettier';
import globals from 'globals';
import {folderStructureConfig} from './eslint.folder-structure.mjs';
import {
  projectStructureParser,
  projectStructurePlugin,
} from 'eslint-plugin-project-structure';
import tseslint from 'typescript-eslint';

export default tseslint.config(
  /**
   * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –ø—Ä–∞–≤–∏–ª–∞ project-structure/folder-structure
   */
  {
    files: ['**/*'],
    ignores: [
      '**/dist/**',
      '**/build/**',
      '**/node_modules/**',
      '**/*.config.js',
      '**/*.d.ts',
      '**/coverage/**',
      '**/tools/**',
      'projectStructure.cache.json',
    ],
    languageOptions: {
      parser: projectStructureParser,
    },
    plugins: {
      'project-structure': projectStructurePlugin,
    },
    rules: {
      'project-structure/folder-structure': ['error', folderStructureConfig],
    },
  },

  /**
   * –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è TypeScript –∏ JavaScript —Ñ–∞–π–ª–æ–≤
   */
  {
    extends: [js.configs.recommended, ...tseslint.configs.recommended],
    files: ['**/*.ts', '**/*.tsx', '**/*.js', '**/*.jsx'],
    languageOptions: {
      parser: tsParser,
      parserOptions: {
        ecmaVersion: 'latest',
        sourceType: 'module',
        project: './tsconfig.json',
        ecmaFeatures: {
          jsx: true,
        },
      },
      globals: {
        ...globals.browser,
        ...globals.es2021,
        ...globals.node,
        ...globals.jest,
        React: 'readonly',
      },
    },
    plugins: {
      '@typescript-eslint': typescript,
      import: importPlugin,
      'sort-keys-fix': sortKeysFix,
      'sort-destructure-keys': sortDestructureKeys,
      prettier: prettierPlugin,
    },
    settings: {
      'import/resolver': {
        typescript: {
          alwaysTryTypes: true,
          project: './tsconfig.json',
        },
      },
    },
    rules: {
      ...typescript.configs['recommended-requiring-type-checking'].rules,
      '@typescript-eslint/no-unused-vars': [
        'warn',
        {
          argsIgnorePattern: '^_',
          varsIgnorePattern: '^_',
          caughtErrorsIgnorePattern: '^_',
        },
      ],
      '@typescript-eslint/no-misused-promises': 'off',
      '@typescript-eslint/no-unsafe-assignment': 'off',
      '@typescript-eslint/no-unsafe-member-access': 'off',
      '@typescript-eslint/no-unsafe-return': 'off',
      '@typescript-eslint/no-unsafe-argument': 'off',
      '@typescript-eslint/no-unsafe-call': 'off',
      '@typescript-eslint/no-explicit-any': 'warn',
      '@typescript-eslint/explicit-function-return-type': 'off',
      '@typescript-eslint/explicit-module-boundary-types': 'off',
      '@typescript-eslint/prefer-promise-reject-errors': 'off',
      '@typescript-eslint/consistent-type-imports': [
        'warn',
        {
          prefer: 'type-imports',
          fixStyle: 'inline-type-imports',
        },
      ],
      '@typescript-eslint/no-floating-promises': 'off',

      'no-console': 'warn',
      'no-multiple-empty-lines': 'warn',
      'no-trailing-spaces': 'warn',
      'max-lines': ['error', 1015],

      'sort-keys-fix/sort-keys-fix': 'warn',
      'sort-destructure-keys/sort-destructure-keys': 'warn',

      // ‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
      'import/order': [
        'warn',
        {
          groups: [
            'builtin', // node –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ (fs, path –∏ —Ç.–¥.)
            'external', // –≤–Ω–µ—à–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (react, antd –∏ —Ç.–¥.)
            'internal', // –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∞–ª–∏–∞—Å—ã (@/ –∏ —Ç.–¥.)
            'parent', // –∏–º–ø–æ—Ä—Ç—ã –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (../)
            'sibling', // –∏–º–ø–æ—Ä—Ç—ã –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (./)
            'index', // index —Ñ–∞–π–ª—ã
            'object', // –∏–º–ø–æ—Ä—Ç—ã —Ç–∏–ø–æ–≤ (type imports)
          ],
          'newlines-between': 'always',
          alphabetize: {
            order: 'asc',
            caseInsensitive: true,
          },
          pathGroups: [
            {
              pattern: 'react',
              group: 'external',
              position: 'before',
            },
            {
              pattern: '@/**',
              group: 'internal',
              position: 'after',
            },
          ],
          pathGroupsExcludedImportTypes: ['react'],
        },
      ],

      '@typescript-eslint/naming-convention': [
        'error',
        {
          selector: 'typeAlias',
          format: ['PascalCase'],
          prefix: ['T'],
        },
        {
          selector: 'enum',
          format: ['UPPER_CASE'],
          prefix: ['E_'],
        },
        {
          selector: 'class',
          format: ['PascalCase'],
        },
        {
          selector: 'variable',
          format: ['camelCase', 'UPPER_CASE', 'PascalCase'],
          leadingUnderscore: 'allow',
        },
        {
          selector: 'function',
          format: ['camelCase', 'PascalCase'],
        },
      ],

      'prettier/prettier': 'error',
    },
  },

  /**
   * üèóÔ∏è –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø FSD –ê–†–•–ò–¢–ï–ö–¢–£–†–´
   * –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤ –º–µ–∂–¥—É —Å–ª–æ—è–º–∏
   */
  {
    files: ['**/*.{ts,tsx,js,jsx}'],
    rules: {
      'import/no-restricted-paths': [
        'error',
        {
          zones: [
            {
              target: 'src/app',
              from: [],
              message: '–°–ª–æ–π "app" –º–æ–∂–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ –≤—Å–µ—Ö —Å–ª–æ–µ–≤.',
            },
            {
              target: 'src/pages',
              from: ['src/app'],
              message:
                '–°–ª–æ–π "pages" –º–æ–∂–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ widgets, features, entities, shared.',
            },
            {
              target: 'src/widgets',
              from: ['src/app', 'src/pages'],
              message:
                '–°–ª–æ–π "widgets" –º–æ–∂–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ features, entities, shared.',
            },
            {
              target: 'src/features',
              from: ['src/app', 'src/pages', 'src/widgets'],
              message:
                '–°–ª–æ–π "features" –º–æ–∂–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ entities –∏ shared.',
            },
            {
              target: 'src/entities',
              from: ['src/app', 'src/pages', 'src/widgets', 'src/features'],
              message: '–°–ª–æ–π "entities" –º–æ–∂–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ shared.',
            },
            {
              target: 'src/shared',
              from: [
                'src/app',
                'src/pages',
                'src/widgets',
                'src/features',
                'src/entities',
              ],
              message:
                '–°–ª–æ–π "shared" —è–≤–ª—è–µ—Ç—Å—è –±–∞–∑–æ–≤—ã–º –∏ –Ω–µ –¥–æ–ª–∂–µ–Ω –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ –¥—Ä—É–≥–∏—Ö —Å–ª–æ–µ–≤.',
            },
          ],
        },
      ],
    },
  },

  /**
   * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
   */
  {
    files: [
      '**/webpack.config.*',
      '**/*.config.*',
      'tools/**/*.{ts,tsx,js,jsx}',
    ],
    rules: {
      'no-console': 'off',
      'import/order': 'off',
      '@typescript-eslint/no-var-requires': 'off',
      'sort-keys-fix/sort-keys-fix': 'off',
      'sort-destructure-keys/sort-destructure-keys': 'off',
      'prettier/prettier': 'off',
      '@typescript-eslint/naming-convention': 'off',
    },
  },

  /**
   * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
   */
  {
    files: [
      '**/__tests__/**',
      '**/*.test.*',
      '**/*.spec.*',
      'src/setupTests.ts',
    ],
    languageOptions: {
      globals: {
        ...globals.jest,
      },
    },
  },

  /**
   * Storybook –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
   */
  ...storybook.configs['flat/recommended'],

  /**
   * Prettier config –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º
   */
  prettier
);
